version: "3.9"

services:
  frontend-react:
    image: koitoror-university-frontend
    build:
      context: ./frontend/
      # args:
        # NODE_ENV: production
    # command: npm run dev
    command: npm start
    ports:
      # - 5000:3000 #developoment
      - 5000:5000 #production
    volumes:
      - ./frontend/:/app
      # - /frontend/node_modules:/app/node_modules
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - REACT_APP_NODE_ENV=production
      - SESSION_SECRET=${SESSION_SECRET}

  backend-django-app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS_PROD=${ALLOWED_HOSTS_PROD}
      - CORS_ORIGIN_WHITELIST=${CORS_ORIGIN_WHITELIST}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}

    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - backend-django-app
    ports:
      - 8004:8000
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data:
